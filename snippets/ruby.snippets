########################################
# Ruby snippets - for Rails, see below #
########################################

# #!/usr/bin/env ruby
snippet #!
	#!/usr/bin/env ruby
	# encoding: utf-8

snippet $req require
	require '${1}'

snippet $case
	case ${1:object}
	when ${2:condition}
		${3}
	end

snippet $when
	when ${1:condition}
		${2}

snippet $def
	def ${1:method_name}
		${2}
	end

snippet $if
	if ${1:condition}
		${2}
	end

snippet $ife
	if ${1:condition}
		${2}
	else
		${3}
	end

snippet $elsif
	elsif ${1:condition}
		${2}

snippet $unless
	unless ${1:condition}
		${2}
	end

snippet $cla class .. end
	class ${1:`substitute(Filename(), '\(_\|^\)\(.\)', '\u\2', 'g')`}
		${2}
	end

snippet $cla class .. initialize .. end
	class ${1:`substitute(Filename(), '\(_\|^\)\(.\)', '\u\2', 'g')`}
		def initialize(${2:args})
			${3}
		end
	end

snippet $cla class .. < ParentClass .. initialize .. end
	class ${1:`substitute(Filename(), '\(_\|^\)\(.\)', '\u\2', 'g')`} < ${2:ParentClass}
		def initialize(${3:args})
			${4}
		end
	end

snippet $mod module .. end
	module ${1:`substitute(Filename(), '\(_\|^\)\(.\)', '\u\2', 'g')`}
		${2}
	end

# attr_reader
snippet $attr attr_reader
	attr_reader :${1:attr_names}

# attr_writer
snippet $attr attr_writer
	attr_writer :${1:attr_names}

# attr_accessor
snippet $attr attr_accessor
	attr_accessor :${1:attr_names}

snippet $attr attr_accessible
	attr_accessible :${1:attr_names}

snippet $defs
	def self.${1:class_method_name}
		${2}
	end

snippet $eachdo
	each do |${1:e}|
		${2}
	end

snippet $mapdo
	map do |${1:e}|
		${2}
	end

#debugging
snippet $pry
	binding.pry
